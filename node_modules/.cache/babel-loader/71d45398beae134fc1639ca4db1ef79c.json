{"ast":null,"code":"var _jsxFileName = \"/Users/athirah/Desktop/my-app/src/App.js\";\nimport React from \"react\";\nimport Title from './ComponentWeather/Title';\nimport Form from './ComponentWeather/Form';\nimport moment from 'moment';\nimport Weathercomp from './ComponentWeather/WeatherComp';\nconst API_KEY = \"cd145d87dcca3f37dda7707b8047db95\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //Country : undefined,\n      city: undefined,\n      Datecity: undefined,\n      Temperature: undefined,\n      description: undefined,\n      listdesc: []\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault(); //const api_call = await fetch('//api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=cd145d87dcca3f37dda7707b8047db95&units=metric');\n\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/forecast?q=\".concat(city, \",Singapore&appid=\").concat(API_KEY, \"&units=metric\"));\n      const data = await api_call.json();\n      console.log(data);\n      this.setState({\n        //Country : data.sys.country,\n        city: data.name,\n        //Datecity : undefined,\n        //Temperature : undefined,\n        //description : undefined,\n        listdesc: data.list\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Form, {\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/athirah/Desktop/my-app/src/App.js"],"names":["React","Title","Form","moment","Weathercomp","API_KEY","App","Component","state","city","undefined","Datecity","Temperature","description","listdesc","getWeather","e","preventDefault","api_call","fetch","data","json","console","log","setState","name","list","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACN;AACAC,MAAAA,IAAI,EAAGC,SAFD;AAGNC,MAAAA,QAAQ,EAAGD,SAHL;AAINE,MAAAA,WAAW,EAAGF,SAJR;AAKNG,MAAAA,WAAW,EAAGH,SALR;AAMNI,MAAAA,QAAQ,EAAE;AANJ,KAFwB;;AAAA,SAWhCC,UAXgC,GAWnB,MAAMC,CAAN,IAAY;AACvBA,MAAAA,CAAC,CAACC,cAAF,GADuB,CAErB;;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,6DAAsDV,IAAtD,8BAA8EJ,OAA9E,mBAA5B;AAEA,YAAMe,IAAI,GAAE,MAAMF,QAAQ,CAACG,IAAT,EAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,WAAKI,QAAL,CAAc;AACV;AACAf,QAAAA,IAAI,EAAGW,IAAI,CAACK,IAFF;AAGV;AACA;AACA;AACAX,QAAAA,QAAQ,EAAGM,IAAI,CAACM;AANN,OAAd;AAWH,KA9B+B;AAAA;;AAgChCC,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE,KAAKZ,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAvC+B;;AA0ClC,eAAeT,GAAf","sourcesContent":["import React from \"react\";\nimport Title from './ComponentWeather/Title';\nimport Form from './ComponentWeather/Form';\nimport moment from 'moment'\nimport Weathercomp from './ComponentWeather/WeatherComp';\n\nconst API_KEY = \"cd145d87dcca3f37dda7707b8047db95\";\n\nclass App extends React.Component {\n\n  state = {\n    //Country : undefined,\n    city : undefined,\n    Datecity : undefined,\n    Temperature : undefined,\n    description : undefined,\n    listdesc :[]\n  }\n\n  getWeather = async(e) => {\n    e.preventDefault();\n      //const api_call = await fetch('//api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=cd145d87dcca3f37dda7707b8047db95&units=metric');\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${city},Singapore&appid=${API_KEY}&units=metric`);\n\n      const data= await api_call.json();\n      console.log(data);\n\n      this.setState({\n          //Country : data.sys.country,\n          city : data.name,\n          //Datecity : undefined,\n          //Temperature : undefined,\n          //description : undefined,\n          listdesc : data.list,\n          \n      });\n\n\n  }\n\n  render(){\n    return (\n      <div>\n        <Title/>\n        <Form getWeather={this.getWeather}/> \n      </div>     \n      )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}