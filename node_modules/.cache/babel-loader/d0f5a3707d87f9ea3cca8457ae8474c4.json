{"ast":null,"code":"var _jsxFileName = \"/Users/athirah/Desktop/my-app/src/ComponentWeather/WeatherComp.js\";\nimport React from \"react\";\nimport moment from 'moment';\n\nconst Weathercomp = props => React.createElement(\"table\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, React.createElement(\"tbody\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  className: \"weather__key\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, props.Temperature && React.createElement(\"span\", {\n  className: \"weather__value\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, \" \", props.Temperature, \" \")), React.createElement(\"td\", {\n  className: \"weather__key\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, props.city && props.country && React.createElement(\"div\", {\n  className: \"weather__value\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, \" \", props.city, \", \", props.country), props.description && React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, moment(props.Datecity).format('llll')), props.description && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, \" \", props.description, \" \"), props.error && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, \"Plesd\")))));\n\nexport default Weathercomp;","map":{"version":3,"sources":["/Users/athirah/Desktop/my-app/src/ComponentWeather/WeatherComp.js"],"names":["React","moment","Weathercomp","props","Temperature","city","country","description","Datecity","format","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAMvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AAAI,EAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEEA,KAAK,CAACC,WAAN,IACA;AAAM,EAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAoCD,KAAK,CAACC,WAA1C,MAHF,CADD,EAOC;AAAI,EAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEED,KAAK,CAACE,IAAN,IAAcF,KAAK,CAACG,OAApB,IACA;AAAK,EAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAmCH,KAAK,CAACE,IAAzC,QAAmDF,KAAK,CAACG,OAAzD,CAHF,EAMEH,KAAK,CAACI,WAAN,IACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAMN,MAAM,CAACE,KAAK,CAACK,QAAP,CAAN,CAAuBC,MAAvB,CAA8B,MAA9B,CAAN,CAPD,EAUEN,KAAK,CAACI,WAAN,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAASJ,KAAK,CAACI,WAAf,MAXF,EAeEJ,KAAK,CAACO,KAAN,IAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAfjB,CAPD,CAFA,CADD,CANF;;AAqDA,eAAeR,WAAf","sourcesContent":["import React from \"react\";\nimport moment from 'moment'\n\nconst Weathercomp = props => (\n\t\n\t\n\t\t\t\t\n\n\t\t\t\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\n\t\t\t<tr>\n\t\t\t\t<td className=\"weather__key\">\n\t\t\t\t{ \t\n\t\t \t\t\tprops.Temperature && \n\t\t \t\t\t<span className=\"weather__value\"> { props.Temperature }\t</span>\n\t\t \t\t}\n\t\t\t\t</td>\n\t\t\t\t<td className=\"weather__key\">\n\t\t\t\t{\t\n\t\t \t\t\tprops.city && props.country && \n\t\t \t\t\t<div className=\"weather__value\"> { props.city }, { props.country }</div>\n\t\t \t\t}\n\t\t \t\t{\n\t\t \t\t\tprops.description && \n\t\t\t\t\t<div>{moment(props.Datecity).format('llll')}</div> \n\t\t\t\t}\t\n\t\t \t\t{\n\t\t \t\t\tprops.description && \n\t\t \t\t\t<span> { props.description } </span>\t\n\t\t \t\t\n\t\t \t\t}\t\n\t\t \t\t{ \n\t \t\t\t\tprops.error && <span>Plesd</span>  \n\t\t\t\t} \t\t\n\t\t \t\t\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t\n\t\t\t\n\t\t\t</tbody>\n\n\t\t</table>\n\t \n\n\t \n\t \n\t \n\t \n\t \t\t\n\t \n\t\n);\n\n\nexport default Weathercomp;"]},"metadata":{},"sourceType":"module"}