{"ast":null,"code":"var _jsxFileName = \"/Users/athirah/Desktop/my-app/src/App.js\";\nimport React from \"react\";\nimport Title from './ComponentWeather/Title';\nimport Form from './ComponentWeather/Form';\nimport moment from 'moment';\nimport Weathercomp from './ComponentWeather/WeatherComp';\nconst API_KEY = \"cd145d87dcca3f37dda7707b8047db95\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //Country : undefined,\n      City: undefined,\n      Datecity: undefined,\n      Temperature: undefined,\n      description: undefined,\n      listdesc: []\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault(); //const api_call = await fetch('//api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=cd145d87dcca3f37dda7707b8047db95&units=metric');\n\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=Singapore,Singapore&appid=\".concat(API_KEY, \"&units=metric\"));\n      const data = await api_call.json();\n      console.log(data);\n      this.setState({\n        //Country : data.sys.country,\n        City: data.name,\n        //Datecity : undefined,\n        //Temperature : undefined,\n        //description : undefined,\n        listdesc: data.list\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Form, {\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Weathercomp //city={this.state.city}\n    //country={this.state.country}\n    , {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), this.state.listdesc.map(d => {\n      if (d.dt_txt.substr(d.dt_txt.length - 8) === \"21:00:00\") {\n        return React.createElement(\"div\", {\n          key: d.dt_txt,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, moment(new Date(d.dt_txt)).format(\"DD MMMM YYYY , dddd\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, d.weather[0].description), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, Math.round(parseFloat(d.main.temp_min) - 273.15), \"\\xB0C  - \", Math.round(parseFloat(d.main.temp_max) - 273.15), \"\\xB0C \"));\n      }\n\n      return null;\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/athirah/Desktop/my-app/src/App.js"],"names":["React","Title","Form","moment","Weathercomp","API_KEY","App","Component","state","City","undefined","Datecity","Temperature","description","listdesc","getWeather","e","preventDefault","api_call","fetch","data","json","console","log","setState","name","list","render","map","d","dt_txt","substr","length","Date","format","weather","Math","round","parseFloat","main","temp_min","temp_max"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACN;AACAC,MAAAA,IAAI,EAAGC,SAFD;AAGNC,MAAAA,QAAQ,EAAGD,SAHL;AAINE,MAAAA,WAAW,EAAGF,SAJR;AAKNG,MAAAA,WAAW,EAAGH,SALR;AAMNI,MAAAA,QAAQ,EAAE;AANJ,KAFwB;;AAAA,SAWhCC,UAXgC,GAWnB,MAAMC,CAAN,IAAY;AACvBA,MAAAA,CAAC,CAACC,cAAF,GADuB,CAErB;;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,sFAA+Ed,OAA/E,mBAA5B;AAEA,YAAMe,IAAI,GAAE,MAAMF,QAAQ,CAACG,IAAT,EAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,WAAKI,QAAL,CAAc;AACV;AACAf,QAAAA,IAAI,EAAGW,IAAI,CAACK,IAFF;AAGV;AACA;AACA;AACAX,QAAAA,QAAQ,EAAGM,IAAI,CAACM;AANN,OAAd;AAWH,KA9B+B;AAAA;;AAgChCC,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE,KAAKZ,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAIE,oBAAC,WAAD,CACE;AACA;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAaG,KAAKP,KAAL,CAAWM,QAAX,CAAoBc,GAApB,CAAwBC,CAAC,IAAI;AAC5B,UAAGA,CAAC,CAACC,MAAF,CAASC,MAAT,CAAgBF,CAAC,CAACC,MAAF,CAASE,MAAT,GAAkB,CAAlC,MAAyC,UAA5C,EAAuD;AACrD,eACA;AAAK,UAAA,GAAG,EAAIH,CAAC,CAACC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC3B,MAAM,CAAC,IAAI8B,IAAJ,CAASJ,CAAC,CAACC,MAAX,CAAD,CAAN,CAA2BI,MAA3B,CAAkC,qBAAlC,CADD,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAML,CAAC,CAACM,OAAF,CAAU,CAAV,EAAatB,WAAnB,CAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMuB,IAAI,CAACC,KAAL,CAAWC,UAAU,CAACT,CAAC,CAACU,IAAF,CAAOC,QAAR,CAAV,GAA6B,MAAxC,CAAN,eAAiEJ,IAAI,CAACC,KAAL,CAAWC,UAAU,CAACT,CAAC,CAACU,IAAF,CAAOE,QAAR,CAAV,GAA4B,MAAvC,CAAjE,WAHA,CADA;AAOD;;AACD,aAAO,IAAP;AACD,KAXA,CAbH,CADF;AA6BD;;AA9D+B;;AAiElC,eAAenC,GAAf","sourcesContent":["import React from \"react\";\nimport Title from './ComponentWeather/Title';\nimport Form from './ComponentWeather/Form';\nimport moment from 'moment'\nimport Weathercomp from './ComponentWeather/WeatherComp';\n\nconst API_KEY = \"cd145d87dcca3f37dda7707b8047db95\";\n\nclass App extends React.Component {\n\n  state = {\n    //Country : undefined,\n    City : undefined,\n    Datecity : undefined,\n    Temperature : undefined,\n    description : undefined,\n    listdesc :[]\n  }\n\n  getWeather = async(e) => {\n    e.preventDefault();\n      //const api_call = await fetch('//api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=cd145d87dcca3f37dda7707b8047db95&units=metric');\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=Singapore,Singapore&appid=${API_KEY}&units=metric`);\n\n      const data= await api_call.json();\n      console.log(data);\n\n      this.setState({\n          //Country : data.sys.country,\n          City : data.name,\n          //Datecity : undefined,\n          //Temperature : undefined,\n          //description : undefined,\n          listdesc : data.list,\n          \n      });\n\n\n  }\n\n  render(){\n    return (\n      <div>\n        <Title/>\n        <Form getWeather={this.getWeather}/> \n        \n        <Weathercomp\n          //city={this.state.city}\n          //country={this.state.country}\n          \n\n        />\n\n\n      \n        {this.state.listdesc.map(d => {\n          if(d.dt_txt.substr(d.dt_txt.length - 8) === \"21:00:00\"){\n            return (\n            <div key = {d.dt_txt}>\n            {moment(new Date(d.dt_txt)).format(\"DD MMMM YYYY , dddd\") } \n            <div>{d.weather[0].description}</div>\n            <div>{Math.round(parseFloat(d.main.temp_min)- 273.15)}&deg;C  - {Math.round(parseFloat(d.main.temp_max)-273.15)}&deg;C </div>\n            </div>\n            )\n          }\n          return null\n        })}\n       \n      </div>     \n      )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}