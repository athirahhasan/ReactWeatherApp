{"ast":null,"code":"var _jsxFileName = \"/Users/athirah/Desktop/my-app/src/App.js\";\nimport React from \"react\";\nimport Title from './ComponentWeather/Title';\nimport Form from './ComponentWeather/Form';\nimport moment from 'react-moment'; //import Weathercomp from './ComponentWeather/WeatherComp';\n//const API_KEY = \"cd145d87dcca3f37dda7707b8047db95\";\n//getWeather={this.getWeather}\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: undefined,\n      humidity: undefined,\n      listdesc: []\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const api_call = await fetch('//api.openweathermap.org/data/2.5/forecast?q=Singapore,SG&appid=cd145d87dcca3f37dda7707b8047db95');\n      const data = await api_call.json();\n      console.log(data);\n      this.setState({\n        temperature: data.city.country,\n        listdesc: data.list,\n        humidity: data.list[0].main.humidity\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Form, {\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.state.temperature), this.state.listdesc.map(d => {\n      if (d.dt_txt.substr(d.dt_txt.length - 8) === \"21:00:00\") {\n        return React.createElement(\"div\", {\n          key: d.dt_txt,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, new Date(d.dt_txt).moment().format('MM'), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, d.main.humidity));\n      }\n\n      return null;\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/athirah/Desktop/my-app/src/App.js"],"names":["React","Title","Form","moment","App","Component","state","temperature","undefined","humidity","listdesc","getWeather","e","preventDefault","api_call","fetch","data","json","console","log","setState","city","country","list","main","render","map","d","dt_txt","substr","length","Date","format"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CACA;AAEA;AAEA;;AACA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACNC,MAAAA,WAAW,EAAGC,SADR;AAENC,MAAAA,QAAQ,EAAED,SAFJ;AAGNE,MAAAA,QAAQ,EAAE;AAHJ,KAFwB;;AAAA,SAQhCC,UARgC,GAQnB,MAAMC,CAAN,IAAY;AACvBA,MAAAA,CAAC,CAACC,cAAF;AACE,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kGAAD,CAA5B;AAEA,YAAMC,IAAI,GAAE,MAAMF,QAAQ,CAACG,IAAT,EAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,WAAKI,QAAL,CAAc;AACVb,QAAAA,WAAW,EAAGS,IAAI,CAACK,IAAL,CAAUC,OADd;AAEVZ,QAAAA,QAAQ,EAAGM,IAAI,CAACO,IAFN;AAGVd,QAAAA,QAAQ,EAAGO,IAAI,CAACO,IAAL,CAAU,CAAV,EAAaC,IAAb,CAAkBf;AAHnB,OAAd;AAQH,KAvB+B;AAAA;;AA2BhCgB,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE,KAAKd,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKL,KAAL,CAAWC,WAAf,CAHF,EAKG,KAAKD,KAAL,CAAWI,QAAX,CAAoBgB,GAApB,CAAwBC,CAAC,IAAI;AAC5B,UAAGA,CAAC,CAACC,MAAF,CAASC,MAAT,CAAgBF,CAAC,CAACC,MAAF,CAASE,MAAT,GAAkB,CAAlC,MAAyC,UAA5C,EAAuD;AACrD,eACA;AAAK,UAAA,GAAG,EAAIH,CAAC,CAACC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,IAAIG,IAAJ,CAASJ,CAAC,CAACC,MAAX,EAAmBzB,MAAnB,GAA4B6B,MAA5B,CAAmC,IAAnC,CADH,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAML,CAAC,CAACH,IAAF,CAAOf,QAAb,CAFA,CADA;AAMD;;AACD,aAAO,IAAP;AACD,KAVA,CALH,CADF;AAoBD;;AAhD+B;;AAmDlC,eAAeL,GAAf","sourcesContent":["import React from \"react\";\nimport Title from './ComponentWeather/Title';\nimport Form from './ComponentWeather/Form';\nimport moment from 'react-moment'\n//import Weathercomp from './ComponentWeather/WeatherComp';\n\n//const API_KEY = \"cd145d87dcca3f37dda7707b8047db95\";\n\n//getWeather={this.getWeather}\nclass App extends React.Component {\n\n  state = {\n    temperature : undefined,\n    humidity :undefined,\n    listdesc :[]\n  }\n\n  getWeather = async(e) => {\n    e.preventDefault();\n      const api_call = await fetch('//api.openweathermap.org/data/2.5/forecast?q=Singapore,SG&appid=cd145d87dcca3f37dda7707b8047db95');\n\n      const data= await api_call.json();\n      console.log(data);\n\n      this.setState({\n          temperature : data.city.country,\n          listdesc : data.list,\n          humidity : data.list[0].main.humidity\n\n      });\n\n\n  }\n\n\n\n  render(){\n    return (\n      <div>\n        <Title/>\n        <Form getWeather={this.getWeather}/> \n        <p>{this.state.temperature}</p>\n      \n        {this.state.listdesc.map(d => {\n          if(d.dt_txt.substr(d.dt_txt.length - 8) === \"21:00:00\"){\n            return (\n            <div key = {d.dt_txt}>\n            { (new Date(d.dt_txt).moment().format('MM')) } \n            <div>{d.main.humidity}</div>\n            </div>\n            )\n          }\n          return null\n        })}\n       \n      </div>     \n      )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}