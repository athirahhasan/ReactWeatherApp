{"ast":null,"code":"var _jsxFileName = \"/Users/athirah/Desktop/my-app/src/App.js\";\nimport React from \"react\";\nimport Title from './ComponentWeather/Title';\nimport Form from './ComponentWeather/Form';\nimport moment from 'moment';\nimport Weathercomp from './ComponentWeather/WeatherComp';\nimport WeatherList from './ComponentWeather/WeatherList';\nconst API_KEY = \"cd145d87dcca3f37dda7707b8047db95\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //Country : undefined,\n      city: undefined,\n      Datecity: undefined,\n      Temperature: undefined,\n      description: undefined,\n      listdesc: [],\n      error: undefined\n    };\n\n    this.getWeather = async e => {\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n      e.preventDefault(); //const api_call = await fetch('//api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=cd145d87dcca3f37dda7707b8047db95&units=metric');\n\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/forecast?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n      const data = await api_call.json();\n      console.log(data);\n\n      if (city && country) {\n        this.setState({\n          country: data.city.country,\n          city: data.city.name,\n          Datecity: new Date().toLocaleString(),\n          Temperature: data.list[2].main.temp,\n          description: data.list[2].weather[0].description,\n          listdesc: data.list,\n          error: undefined\n        });\n      } else {\n        this.setState({\n          country: undefined,\n          city: undefined,\n          Datecity: undefined,\n          Temperature: undefined,\n          description: undefined,\n          //listdesc : [],\n          error: \"Please enter city and country\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Form, {\n      getWeather: this.getWeather,\n      getcurrentWeather: this.getcurrentWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Weathercomp, {\n      Temperature: this.state.Temperature,\n      city: this.state.city,\n      country: this.state.country,\n      description: this.state.description,\n      Datecity: this.state.Datecity,\n      listdesc: this.state.listdesc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(WeatherList, {\n      listdesc: this.state.listdesc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/athirah/Desktop/my-app/src/App.js"],"names":["React","Title","Form","moment","Weathercomp","WeatherList","API_KEY","App","Component","state","city","undefined","Datecity","Temperature","description","listdesc","error","getWeather","e","target","elements","value","country","preventDefault","api_call","fetch","data","json","console","log","setState","name","Date","toLocaleString","list","main","temp","weather","render","getcurrentWeather"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Title from './ComponentWeather/Title';\nimport Form from './ComponentWeather/Form';\nimport moment from 'moment'\nimport Weathercomp from './ComponentWeather/WeatherComp';\nimport WeatherList from './ComponentWeather/WeatherList';\n\n\n\nconst API_KEY = \"cd145d87dcca3f37dda7707b8047db95\";\n\nclass App extends React.Component {\n\n  state = {\n    //Country : undefined,\n    city : undefined,\n    Datecity : undefined,\n    Temperature : undefined,\n    description : undefined,\n    listdesc :[],\n    error : undefined\n  }\n\n  getWeather = async(e) => {\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n    e.preventDefault();\n      //const api_call = await fetch('//api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=cd145d87dcca3f37dda7707b8047db95&units=metric');\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${API_KEY}&units=metric`);\n\n      const data= await api_call.json();\n      console.log(data);\n      if (city && country){\n      this.setState({\n          country : data.city.country,\n          city : data.city.name,\n          Datecity : new Date().toLocaleString(),\n          Temperature : data.list[2].main.temp,\n          description : data.list[2].weather[0].description,\n          listdesc : data.list,\n          error : undefined,\n          \n      });\n      }else{\n        this.setState({\n            country : undefined,\n            city : undefined,\n            Datecity : undefined,\n            Temperature : undefined,\n            description : undefined,\n            //listdesc : [],\n            error : \"Please enter city and country\",\n\n          });\n    }\n\n  }\n  \n\n  render(){\n    return (\n      <div>\n        <Title/>\n        <Form getWeather={this.getWeather} getcurrentWeather={this.getcurrentWeather}/> \n        <Weathercomp\n          Temperature={this.state.Temperature} \n          city={this.state.city}\n          country={this.state.country}\n          description={this.state.description}\n          Datecity ={this.state.Datecity}\n          listdesc = {this.state.listdesc}\n\n        />\n        <WeatherList\n\n        listdesc = {this.state.listdesc}/>\n\n        \n\n      </div>     \n      )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}