{"ast":null,"code":"var _jsxFileName = \"/Users/athirah/Desktop/my-app/src/App.js\";\nimport React from \"react\";\nimport Title from './ComponentWeather/Title';\nimport Form from './ComponentWeather/Form';\nimport Weathercomp from './ComponentWeather/WeatherComp';\nconst API_KEY = \"cd145d87dcca3f37dda7707b8047db95\"; //getWeather={this.getWeather}\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: undefined,\n      humidity: undefined,\n      description: undefined\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const api_call = await fetch('//api.openweathermap.org/data/2.5/forecast?q=Singapore,SG&appid=cd145d87dcca3f37dda7707b8047db95');\n      const data = await api_call.json();\n      console.log(data);\n      this.setState({\n        temperature: data.city.country,\n        description: data.list[0].weather[0].description,\n        humidity: data.list[0].main.humidity\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Form, {\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Weathercomp, {\n      temperature: this.state.temperature,\n      description: this.state.description,\n      humidity: this.state.humidity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/athirah/Desktop/my-app/src/App.js"],"names":["React","Title","Form","Weathercomp","API_KEY","App","Component","state","temperature","undefined","humidity","description","getWeather","e","preventDefault","api_call","fetch","data","json","console","log","setState","city","country","list","weather","main","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AAEA,MAAMC,OAAO,GAAG,kCAAhB,C,CAEA;;AACA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACNC,MAAAA,WAAW,EAAGC,SADR;AAENC,MAAAA,QAAQ,EAAED,SAFJ;AAGNE,MAAAA,WAAW,EAAEF;AAHP,KAFwB;;AAAA,SAQhCG,UARgC,GAQnB,MAAMC,CAAN,IAAY;AACvBA,MAAAA,CAAC,CAACC,cAAF;AACE,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kGAAD,CAA5B;AAEA,YAAMC,IAAI,GAAE,MAAMF,QAAQ,CAACG,IAAT,EAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,WAAKI,QAAL,CAAc;AACVb,QAAAA,WAAW,EAAGS,IAAI,CAACK,IAAL,CAAUC,OADd;AAEVZ,QAAAA,WAAW,EAAGM,IAAI,CAACO,IAAL,CAAU,CAAV,EAAaC,OAAb,CAAqB,CAArB,EAAwBd,WAF5B;AAGVD,QAAAA,QAAQ,EAAGO,IAAI,CAACO,IAAL,CAAU,CAAV,EAAaE,IAAb,CAAkBhB;AAHnB,OAAd;AAQH,KAvB+B;AAAA;;AAyBhCiB,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE,KAAKf,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,WAAD;AACE,MAAA,WAAW,EAAE,KAAKL,KAAL,CAAWC,WAD1B;AAEE,MAAA,WAAW,EAAG,KAAKD,KAAL,CAAWI,WAF3B;AAGE,MAAA,QAAQ,EAAI,KAAKJ,KAAL,CAAWG,QAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAYD;;AAtC+B;;AAyClC,eAAeL,GAAf","sourcesContent":["import React from \"react\";\nimport Title from './ComponentWeather/Title';\nimport Form from './ComponentWeather/Form';\nimport Weathercomp from './ComponentWeather/WeatherComp';\n\nconst API_KEY = \"cd145d87dcca3f37dda7707b8047db95\";\n\n//getWeather={this.getWeather}\nclass App extends React.Component {\n\n  state = {\n    temperature : undefined,\n    humidity :undefined,\n    description :undefined\n  }\n\n  getWeather = async(e) => {\n    e.preventDefault();\n      const api_call = await fetch('//api.openweathermap.org/data/2.5/forecast?q=Singapore,SG&appid=cd145d87dcca3f37dda7707b8047db95');\n\n      const data= await api_call.json();\n      console.log(data);\n\n      this.setState({\n          temperature : data.city.country,\n          description : data.list[0].weather[0].description,\n          humidity : data.list[0].main.humidity\n\n      });\n\n\n  } \n\n  render(){\n    return (\n      <div>\n        <Title/>\n        <Form getWeather={this.getWeather}/> \n        <Weathercomp \n          temperature={this.state.temperature}\n          description ={this.state.description}\n          humidity = {this.state.humidity}\n\n        />\n        </div>     \n      );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}